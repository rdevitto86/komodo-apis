enableMoxtox: ${USE_MOCKS:false} # Enables Moxtox if USE_MOCKS env var is set to "true"
# enableMoxtox: true  # IGNORE
debug: false # Enables debug logging
defaultDelay: 0  # Default delay in milliseconds for all responses
performanceMode: dynamic # Options: default | quick | dynamic. See docs for details.
dir: ./test/moxtox  # Directory where moxtox config and data are stored
dataDir: ${dir}/data  # Directory where mock response files are stored
allowedEnvironments:
  - dev
  - staging
ignoredRoutes:
  - /health
  - /.well-known
mappings:
  /login:
    methods:
      POST:
        scenarios:
          - name: "Default Login"
            file: ${dataDir}/login.json
            conditions:
              body:
                username: "*"  # Match if body contains {"username": "*"}
              # query: # Optional query parameters
              #   version: "*"  # Match if query contains ?version=*
              # path: # Optional path parameters
              #   id: "*"  # For /login/{id}, match any id
              # headers:
              #   Content-Type: "application/json"  # Match if header contains Content-Type: application/json
            log: true  # Enable logging for this scenario
  /logout:
    methods:
      POST:
        scenarios:
          - name: "Default Logout"
            file: ${dataDir}/logout.json
            conditions:
              body:
                username: "*"  # Match if body contains {"username": "*"}
          - name: "Echo Logout"
            dynamic: true
            template: '{"echo": "{{.body.username}}"}'  # Use request body.username
            conditions:
              body:
                username: "*" # Match if body contains {"username": "*"}
              query:
                echo: "true"  # Match ?echo=true
            log: true  # Enable logging for this scenario
  /token:
    methods:
      POST:
        scenarios:
          - name: "Default Token Request"
            file: ${dataDir}/token_post_default.json
            conditions:
              body:
                token: "*"  # Match if body contains {"token": "*"}
            priority: 1  # Higher priority to match first
          - name: "Unauthorized Token Request"
            file: ${dataDir}/token_post_400.json
            conditions:
              body:
                token: "123"  # Match if body contains {"token": "123"}
            priority: 2  # Lower priority to match second
      DELETE:
        scenarios:
          - name: "Default Token Deletion"
            file: ${dataDir}/token_delete_default.json
            conditions:
              body:
                token: "*"  # Match if body contains {"token": "*"}
          - name: "Token Not Found"
            file: ${dataDir}/token_delete_404.json
            conditions:
              body:
                token: "" # Match if body contains {"token": ""}
  /token/refresh:
    methods:
      POST:
        scenarios:
          - name: "Default Token Refresh"
            file: ${dataDir}/token_refresh_default.json
            conditions:
              body:
                token: "*"  # Match if body contains {"token": "*"}
